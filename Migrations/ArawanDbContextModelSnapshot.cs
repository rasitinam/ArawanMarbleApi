// <auto-generated />
using ArawanMarbleApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArawanMarbleApi.Migrations
{
    [DbContext(typeof(ArawanDbContext))]
    partial class ArawanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ArawanMarbleApi.Models.Customer", b =>
                {
                    b.Property<int>("Customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("customerid");

                    b.Property<string>("Customeremail")
                        .HasColumnType("TEXT")
                        .HasColumnName("customeremail");

                    b.Property<string>("Customermessage")
                        .HasColumnType("TEXT")
                        .HasColumnName("customermessage");

                    b.Property<string>("Customername")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("customername");

                    b.Property<string>("Customersubject")
                        .HasColumnType("TEXT")
                        .HasColumnName("customersubject");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.HasKey("Customerid");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("ArawanMarbleApi.Models.Product", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("productid");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Productimg")
                        .HasColumnType("TEXT")
                        .HasColumnName("productimg");

                    b.Property<string>("Productname")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("productname");

                    b.HasKey("Productid");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("ArawanMarbleApi.Models.Project", b =>
                {
                    b.Property<int>("Projectid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("projectid");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Projectimg")
                        .HasColumnType("TEXT")
                        .HasColumnName("projectimg");

                    b.Property<string>("Projectname")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("projectname");

                    b.Property<string>("Projectplace")
                        .HasColumnType("TEXT")
                        .HasColumnName("projectplace");

                    b.HasKey("Projectid");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("ArawanMarbleApi.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("userid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Userid");

                    b.HasIndex(new[] { "Username" }, "IX_users_username")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
